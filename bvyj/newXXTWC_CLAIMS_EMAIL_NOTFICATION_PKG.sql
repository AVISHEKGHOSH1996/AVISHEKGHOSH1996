create or replace PACKAGE BODY XXTWC_CLAIMS_EMAIL_NOTFICATION_PKG
AS 
/*PROCEDURE FOR EMAIL NOTIFICATION WHEN CLAIM IS SUBMIT*/
PROCEDURE SEND_EMAIL_FOR_SUBMIT (
	P_CLAIM_TYPES 		VARCHAR2,
	P_CLAIM_ID          NUMBER
)IS

    l_id NUMBER;
    lv_to_email VARCHAR2(5000);
    lv_email VARCHAR2(500);
    lv_created_by VARCHAR2(500);
    lv_name VARCHAR2(500);
    lv_query VARCHAR2(4000);
    lv_claim_amount NUMBER;
    lv_wf_id NUMBER;
    lv_seq NUMBER;
    lv_claim_id NUMBER;
    lv_claim_date DATE;
    lv_claim_number VARCHAR2(1000);
    lv_org_id NUMBER;
    lv_appr_lvl_hdr_id NUMBER;
    LV_DIRECT_FLAG NUMBER;
	LV_EMAIL_HEADER VARCHAR2(1000);
	LV_EMAIL_BODY CLOB;
	lv_wf_next_seq_no NUMBER;
	lv_department VARCHAR2(200);
	lv_salesmanager VARCHAR2(500);
    LV_SALESMANAGER_ID NUMBER;
    LV_LOOKUP_VALUE VARCHAR2(500);
	LV_LOGIN_URL    VARCHAR2(1000);
	LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
	LV_ORDER_NUMBER  VARCHAR2(1000);
	LV_EMAIL_CC VARCHAR2(4000);
BEGIN
SELECT
    ch.claim_number,
    ch.claim_id,
    wh.appr_lvl_hdr_id,
    ch.org_id,
    ch.wf_id,
    ch.claim_amount,
    ch.claim_date,
	ch.wf_next_seq_no,
	ch.department,
    ch.salesmanager,
	ch.SOLD_TO_CUSTOMER_NAME,
	ch.ORDER_NUMBER
INTO
    lv_claim_number,
    lv_claim_id,
    lv_appr_lvl_hdr_id,
    lv_org_id,
    lv_wf_id,
    lv_claim_amount,
    lv_claim_date,
	lv_wf_next_seq_no,
	lv_department,
	lv_salesmanager,
	LV_SOLD_TO_CUSTOMER_NAME,
	LV_ORDER_NUMBER
	
FROM
    xxtwc_claims_headers        ch,
    xxtwc_claims_appr_wf_header wh
WHERE
        ch.wf_id = wh.wf_id
    AND claim_id = P_CLAIM_ID;
	
	BEGIN
	IF lv_wf_next_seq_no = 11
	THEN
	BEGIN
    SELECT USER_ID
    INTO LV_SALESMANAGER_ID
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS
    WHERE UPPER(EMAIL_ID) = UPPER(lv_salesmanager);
    EXCEPTION
    WHEN OTHERS
    THEN LV_SALESMANAGER_ID := NULL;
    END;
    
	IF LV_SALESMANAGER_ID IS NOT NULL
	THEN LV_TO_EMAIL := lv_salesmanager;
	ELSE
	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU, XXTWC_CLAIMS_APPR_GROUPS G
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID = G.GROUP_ID
    AND G.GROUP_NAME = 'Claim Owner';
	END IF;
	
BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_CLAIM_OWNER_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL; 
END;
    
	ELSE
	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID IN
	(SELECT GROUP_ID
				FROM XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID
				AND ALH.HIERARCHY_NAME = 'Finance'
				AND lv_claim_amount BETWEEN ALD.MIN_VALUE AND ALD.MAX_VALUE
				AND ALH.ORG_ID = LV_ORG_ID
				AND ALD.GROUP_ID  IS NOT NULL);
BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_FINANCE_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END;                
                
	END IF;
	END;

	

    BEGIN
        SELECT
        FIRSTNAME || ' ' || LASTNAME  NAME,
        EMAIL_ID  
        INTO 
        LV_NAME,
        LV_EMAIL
        FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L
        WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
        AND L.CLAIM_ID = LV_CLAIM_ID AND "ACTION" = 'Review Claim and Submit'
        AND L.STATUS <> 0;
    EXCEPTION
        WHEN OTHERS THEN
        LV_NAME := NULL;
        LV_EMAIL := NULL;
    END;
    
    BEGIN
    SELECT LOOKUP_VALUE 
    INTO LV_LOOKUP_VALUE
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = P_CLAIM_TYPES;
    END;
	
	BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
	END;
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_LOOKUP_VALUE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

 IF LV_EMAIL_BODY IS NOT NULL AND LV_TO_EMAIL IS NOT NULL
 THEN
    BEGIN
    l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
        p_body          => LV_EMAIL_BODY,
		p_cc            => LV_EMAIL_CC,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
        );
        APEX_MAIL.PUSH_QUEUE;
END;
END IF;
END SEND_EMAIL_FOR_SUBMIT;

----------------------------------------------------------------------
/*PROCEDURE FOR EMAIL NOTIFICATION WHEN CLAIM IS APPROVED*/

PROCEDURE SEND_EMAIL_FOR_DEPARTMENTAL_HIERARCHY_APPROVAL (
	P_CLAIM_ID          NUMBER,
	P_CLAIM_DATE        DATE
)IS

l_id NUMBER;
LV_TO_EMAIL VARCHAR2(5000);
LV_EMAIL VARCHAR2(500);
LV_CREATED_BY VARCHAR2(500);
LV_NAME VARCHAR2(500);
lv_query varchar2(4000);
lv_claim_amount NUMBER;
LV_WF_ID NUMBER;
LV_SEQ NUMBER;
LV_CLAIM_ID NUMBER;
LV_CLAIM_DATE DATE;
LV_CLAIM_NUMBER VARCHAR2(1000);
LV_ORG_ID NUMBER;
LV_GROUP_ID varchar2(4000);
LV_MAX_GROUP_ID varchar2(4000);
LV_COUNT_GROUP_ID NUMBER;
LV_COUNT_SEQ NUMBER;
LV_DIRECT_FLAG NUMBER;
LV_APPR_LVL_HDR_ID NUMBER;
LV_EMAIL_HEADER VARCHAR2(1000);
LV_EMAIL_BODY CLOB;
LV_EMAIL_HEADER_APP VARCHAR2(1000);
LV_EMAIL_BODY_APP CLOB;
LV_CLAIM_TYPES VARCHAR2(1000);
LV_WF_NEXT_SEQ_NO NUMBER;
LV_WAREHOUSE_CODE VARCHAR2(1000);
LV_LOGIN_URL VARCHAR2(1000);
LV_DEPARTMENT VARCHAR2(1000);
LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
LV_ORDER_NUMBER  VARCHAR2(1000);
LV_EMAIL_CC  VARCHAR2(4000);
LV_EMAIL_CC_APP VARCHAR2(4000);
BEGIN

LV_CLAIM_ID := P_CLAIM_ID; 

SELECT 
WF_ID,
DEPARTMENT,
CLAIM_AMOUNT,
CLAIM_DATE,
ORG_ID,
CLAIM_NUMBER,
WAREHOUSE_CODE,
(SELECT LOOKUP_VALUE 
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = CLAIM_TYPE) CLAIM_TYPE,
WF_NEXT_SEQ_NO,
SOLD_TO_CUSTOMER_NAME,
ORDER_NUMBER
INTO 
LV_WF_ID,
LV_DEPARTMENT,
LV_CLAIM_AMOUNT,
LV_CLAIM_DATE,
LV_ORG_ID,
LV_CLAIM_NUMBER,
LV_WAREHOUSE_CODE,
LV_CLAIM_TYPES,
LV_WF_NEXT_SEQ_NO,
LV_SOLD_TO_CUSTOMER_NAME,
LV_ORDER_NUMBER
FROM XXTWC_CLAIMS_HEADERS
WHERE CLAIM_ID = P_CLAIM_ID; 

SELECT SEQ , NVL(WH.DIRECT_FLAG,0),APPR_LVL_HDR_ID
INTO LV_SEQ , LV_DIRECT_FLAG, LV_APPR_LVL_HDR_ID
FROM XXTWC_CLAIMS_APPR_WF_DETAILS WF, XXTWC_CLAIMS_APPR_WF_HEADER WH
	WHERE WF.WF_ID = WH.WF_ID
	AND WF.WF_ID = LV_WF_ID
	AND UPPER(STEP_NAME) = UPPER('Departmental Hierarchy Approval');

BEGIN
SELECT
FIRSTNAME || ' ' || LASTNAME  NAME,
 EMAIL_ID  
INTO 
LV_NAME,
LV_EMAIL
FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L
WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
AND L.CLAIM_ID = LV_CLAIM_ID AND "ACTION" = 'Review Claim and Submit'
AND L.STATUS <> 0;
EXCEPTION
WHEN OTHERS THEN
LV_NAME := NULL;
LV_EMAIL := NULL;
END;	
	
IF LV_WF_NEXT_SEQ_NO = 12 THEN
BEGIN

lv_query:=q'#SELECT LISTAGG (EMAIL_ID, ',') WITHIN GROUP (ORDER BY USER_ID )  
from (
SELECT DISTINCT LD.USER_ID, LD.EMAIL_ID
FROM XXTWC_CLAIMS_APPR_GROUP_USERS GU, XXTWC_CLAIMS_USER_LOGIN_DETAILS LD, XXTWC_CLAIMS_USER_ORG_DETAILS OD
WHERE GU.USER_ID = LD.USER_ID 
AND OD.USER_ID = LD.USER_ID
AND LD.DEPT_CODE IN (SELECT CH.DEPARTMENT FROM XXTWC_CLAIMS_HEADERS CH WHERE CH.CLAIM_ID = #'||LV_CLAIM_ID|| q'#)
AND #'||LV_ORG_ID|| q'# = OD.ORG_ID 
AND EXISTS (SELECT result AS R FROM (select regexp_substr(OD.WAREHOUSE_CODE, '[^:]+', 1, level) result
			from DUAL
				connect by level <= length(regexp_replace(OD.WAREHOUSE_CODE, '[^:]+')) + 1)
                WHERE RESULT = '#'||LV_WAREHOUSE_CODE|| q'#')
AND GROUP_ID IN (
SELECT DISTINCT result 
FROM (
WITH RWS AS (
SELECT GROUP_ID 
				--INTO 
				--LV_GROUP_ID  
                FROM
	            (SELECT 
				GROUP_ID 
				FROM 
				XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID 
                AND ALH.APPR_LVL_HDR_ID = #'||LV_APPR_LVL_HDR_ID || q'#
                AND ((#'||lv_claim_amount || q'# <= ALD.MAX_VALUE        
				AND #'||lv_claim_amount || q'# >= (CASE WHEN ALD.ATTRIBUTE1 = 1 AND UPPER('#'||LV_DEPARTMENT|| q'#') IN ('OPERATIONS','QUALITY') THEN 0 ELSE ALD.MIN_VALUE END ))
				OR #'||lv_claim_amount || q'# > ALD.MAX_VALUE)  
				AND ALH.ORG_ID = #'||LV_ORG_ID || q'#
				AND NOT EXISTS (SELECT 1 FROM XXTWC_CLAIMS_APPR_WF_ACT_LOG LO
				WHERE LO.SEQ = #'||LV_SEQ || q'# AND LO.GROUP_ID = ALD.GROUP_ID AND LO.WF_ID = #'||LV_WF_ID || q'# AND LO.CLAIM_ID = #'||P_CLAIM_ID || q'#)
				AND ALD.GROUP_ID  IS NOT NULL
				ORDER BY ALD.MAX_VALUE ASC)
				WHERE ROWNUM < 2
)


select regexp_substr(GROUP_ID, '[^:]+', 1, level) result
			from RWS
				connect by level <= length(regexp_replace(GROUP_ID, '[^:]+')) + 1)))#';
 
EXECUTE IMMEDIATE lv_query into LV_TO_EMAIL;				
	--dbms_output.put_line(LV_TO_EMAIL);	
EXCEPTION
WHEN OTHERS THEN
LV_TO_EMAIL := NULL;
XXTWC_CLAIMS_GP_ERROR_PKG.GP_ERROR_LOG ('Error in Dynamic sql of Dept Approve/Reject Email',
                             SQLCODE,   
							 SQLERRM, 
							 V('APP_USER'),
                             35,
							 p_claim_id
                             );
END;

BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER_APP,
LV_EMAIL_BODY_APP,
LV_EMAIL_CC_APP
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'CLAIM_FOR_DEPARTMENT_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY_APP := NULL; 
		LV_EMAIL_CC_APP := NULL;
END;

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '\',NULL); 
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#NAME#',LV_NAME);
--LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER_APP := REPLACE(LV_EMAIL_HEADER_APP, LV_EMAIL_HEADER_APP, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER_APP);

IF  LV_TO_EMAIL IS NOT NULL AND LV_EMAIL_BODY_APP IS NOT NULL
THEN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
		P_CC                 => LV_EMAIL_CC_APP,
        p_body               => LV_EMAIL_BODY_APP,
		p_body_html          => LV_EMAIL_BODY_APP,
        p_subj               => LV_EMAIL_HEADER_APP
         );
        APEX_MAIL.PUSH_QUEUE;
    END IF;

ELSE

SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID IN
	(SELECT GROUP_ID
				FROM XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID
				AND ALH.HIERARCHY_NAME = 'Finance'
				AND lv_claim_amount BETWEEN ALD.MIN_VALUE AND ALD.MAX_VALUE
				AND ALH.ORG_ID = LV_ORG_ID
				AND ALD.GROUP_ID  IS NOT NULL);

BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_FINANCE_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
END; 

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL); 
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

IF LV_EMAIL_BODY IS NOT NULL AND LV_TO_EMAIL IS NOT NULL
THEN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
		P_CC                 => LV_EMAIL_CC,
        p_body               => LV_EMAIL_BODY,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
         );
        APEX_MAIL.PUSH_QUEUE;

END IF;



       
END IF;	

END SEND_EMAIL_FOR_DEPARTMENTAL_HIERARCHY_APPROVAL;

----------------------------------------------------------------------------------
/*PROCEDURE FOR EMAIL NOTIFICATION WHEN CLAIM IS REJECTED*/

PROCEDURE SEND_EMAIL_FOR_REJECTED (
	P_CLAIM_ID          NUMBER,
	P_CLAIM_DATE        DATE
)IS

l_id NUMBER;
LV_EMAIL VARCHAR2(5000);
LV_CREATED_BY VARCHAR2(500);
LV_NAME VARCHAR2(500);
LV_EMAIL_HEADER VARCHAR2(1000);
LV_EMAIL_BODY CLOB;
LV_CLAIM_NUMBER VARCHAR2(500);
LV_CLAIM_AMOUNT NUMBER;
LV_CLAIM_TYPES VARCHAR2(500);
LV_LOGIN_URL VARCHAR2(1000);
LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
LV_ORDER_NUMBER  VARCHAR2(1000);
LV_EMAIL_CC      VARCHAR2(4000);
BEGIN
BEGIN
SELECT
D.FIRSTNAME || ' ' || D.LASTNAME  NAME,
 D.EMAIL_ID,
 CH.CLAIM_NUMBER,
 CH.CLAIM_AMOUNT,
 (SELECT LOOKUP_VALUE 
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = CH.CLAIM_TYPE) CLAIM_TYPE,
	CH.SOLD_TO_CUSTOMER_NAME,
	CH.ORDER_NUMBER
INTO 
LV_NAME,
LV_EMAIL,
LV_CLAIM_NUMBER,
LV_CLAIM_AMOUNT,
LV_CLAIM_TYPES,
LV_SOLD_TO_CUSTOMER_NAME,
LV_ORDER_NUMBER
FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L, XXTWC_CLAIMS_HEADERS CH
WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
AND L.CLAIM_ID = P_CLAIM_ID
AND CH.CLAIM_ID = L.CLAIM_ID
AND ACTION = 'Review Claim and Submit'
AND L.STATUS <> 0;
EXCEPTION
WHEN OTHERS THEN
LV_NAME := NULL;
LV_EMAIL := NULL;
END;

BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'CLAIM_FOR_REJECT';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END;

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',''); 
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',P_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);
IF LV_EMAIL_BODY IS NOT NULL AND LV_EMAIL IS NOT NULL
THEN 
BEGIN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_EMAIL,
		p_cc                 => LV_EMAIL_CC,
		p_body               => LV_EMAIL_BODY,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER  
        );
        APEX_MAIL.PUSH_QUEUE;
END;
END IF;
END SEND_EMAIL_FOR_REJECTED;
-----------------------------------------------------------------------------------------------

/*PROCEDURE FOR EMAIL NOTIFICATION WHEN FINANCE IS APPROVED*/
PROCEDURE SEND_EMAIL_FOR_FINANCE_APPROVAL (
	P_CLAIM_ID          NUMBER,
	P_CLAIM_DATE        DATE
)IS

    l_id NUMBER;
    lv_to_email VARCHAR2(5000);
    lv_email VARCHAR2(500);
    lv_created_by VARCHAR2(500);
    lv_name VARCHAR2(500);
    lv_query VARCHAR2(4000);
    lv_claim_amount NUMBER;
    lv_wf_id NUMBER;
    lv_seq NUMBER;
    lv_claim_id NUMBER;
    lv_claim_date DATE;
    lv_claim_number VARCHAR2(1000);
    lv_org_id NUMBER;
    lv_appr_lvl_hdr_id NUMBER;
    LV_DIRECT_FLAG NUMBER;
	LV_EMAIL_HEADER VARCHAR2(1000);
	LV_EMAIL_BODY CLOB;
	lv_wf_next_seq_no NUMBER;
	lv_department VARCHAR2(200);
	lv_salesmanager VARCHAR2(500);
    LV_CLAIM_TYPES VARCHAR2(500);
	LV_LOGIN_URL VARCHAR2(1000);
	LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
    LV_ORDER_NUMBER  VARCHAR2(1000);
	LV_EMAIL_CC      VARCHAR2(4000);
BEGIN
SELECT
    ch.claim_number,
    ch.claim_id,
    wh.appr_lvl_hdr_id,
    ch.org_id,
    ch.wf_id,
    ch.claim_amount,
    ch.claim_date,
	ch.wf_next_seq_no,
	ch.department,
    ch.salesmanager,
    (SELECT LOOKUP_VALUE 
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = CH.CLAIM_TYPE) CLAIM_TYPE,
	CH.SOLD_TO_CUSTOMER_NAME,
	CH.ORDER_NUMBER
INTO
    lv_claim_number,
    lv_claim_id,
    lv_appr_lvl_hdr_id,
    lv_org_id,
    lv_wf_id,
    lv_claim_amount,
    lv_claim_date,
	lv_wf_next_seq_no,
	lv_department,
	lv_salesmanager,
    LV_CLAIM_TYPES,
	LV_SOLD_TO_CUSTOMER_NAME,
    LV_ORDER_NUMBER
	
FROM
    xxtwc_claims_headers        ch,
    xxtwc_claims_appr_wf_header wh
WHERE
        ch.wf_id = wh.wf_id
    AND claim_id = P_CLAIM_ID;
	
	
	
    BEGIN
        SELECT
        FIRSTNAME || ' ' || LASTNAME  NAME,
        EMAIL_ID  
        INTO 
        LV_NAME,
        LV_EMAIL
        FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L
        WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
        AND L.CLAIM_ID = LV_CLAIM_ID AND "ACTION" = 'Review Claim and Submit'
        AND L.STATUS <> 0;
    EXCEPTION
        WHEN OTHERS THEN
        LV_NAME := NULL;
        LV_EMAIL := NULL;
    END;
	
   BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'CLAIM_IS_FINAL_APPROVED';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END;

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL); 
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

IF  LV_EMAIL IS NOT NULL AND LV_EMAIL_BODY IS NOT NULL
THEN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_EMAIL,
		p_cc                 => LV_EMAIL_CC,
        p_body               => LV_EMAIL_BODY,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
         );
        APEX_MAIL.PUSH_QUEUE;
    END IF;
END SEND_EMAIL_FOR_FINANCE_APPROVAL;
------------------------------------------------------------------------------------

/*PROCEDURE FOR EMAIL NOTIFICATION WHEN CLAIM OWNER IS APPROVED*/

PROCEDURE SEND_EMAIL_FOR_CLAIM_OWNER_APPROVAL (
	P_CLAIM_ID          NUMBER,
	P_CLAIM_DATE        DATE
)IS

    l_id NUMBER;
    lv_to_email VARCHAR2(5000);
    lv_email VARCHAR2(500);
    lv_created_by VARCHAR2(500);
    lv_name VARCHAR2(500);
    lv_query VARCHAR2(4000);
    lv_claim_amount NUMBER;
    lv_wf_id NUMBER;
    lv_seq NUMBER := 11;
    lv_claim_id NUMBER;
    lv_claim_date DATE;
    lv_claim_number VARCHAR2(1000);
    lv_org_id NUMBER;
    lv_appr_lvl_hdr_id NUMBER;
    LV_DIRECT_FLAG NUMBER;
	LV_EMAIL_HEADER VARCHAR2(1000);
	LV_EMAIL_BODY CLOB;
	lv_wf_next_seq_no NUMBER;
	lv_department VARCHAR2(200);
	lv_salesmanager VARCHAR2(500);
    LV_EMAIL_BODY_APP CLOB;
    LV_CLAIM_TYPES VARCHAR2(1000);
    LV_EMAIL_HEADER_APP VARCHAR2(1000);
	LV_WAREHOUSE_CODE VARCHAR2(4000);
	LV_LOGIN_URL VARCHAR2(1000);
	LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
	LV_ORDER_NUMBER  VARCHAR2(1000);
	LV_EMAIL_CC      VARCHAR2(4000);
	LV_EMAIL_CC_APP  VARCHAR2(4000);
BEGIN
SELECT
    ch.claim_number,
    ch.claim_id,
    wh.appr_lvl_hdr_id,
    ch.org_id,
    ch.wf_id,
    ch.claim_amount,
    ch.claim_date,
	ch.wf_next_seq_no,
	ch.department,
    ch.salesmanager,
	ch.WAREHOUSE_CODE,
    (SELECT LOOKUP_VALUE 
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = CH.CLAIM_TYPE) CLAIM_TYPE,
	ch.SOLD_TO_CUSTOMER_NAME,
	ch.ORDER_NUMBER
INTO
    lv_claim_number,
    lv_claim_id,
    lv_appr_lvl_hdr_id,
    lv_org_id,
    lv_wf_id,
    lv_claim_amount,
    lv_claim_date,
	lv_wf_next_seq_no,
	lv_department,
	lv_salesmanager,
	LV_WAREHOUSE_CODE,
    LV_CLAIM_TYPES,
    LV_SOLD_TO_CUSTOMER_NAME,
    LV_ORDER_NUMBER
	
FROM
    xxtwc_claims_headers        ch,
    xxtwc_claims_appr_wf_header wh
WHERE
        ch.wf_id = wh.wf_id
    AND claim_id = P_CLAIM_ID;
	
	
	BEGIN
	IF lv_wf_next_seq_no = 12
	THEN
	BEGIN
	lv_query:=q'#SELECT LISTAGG (EMAIL_ID, ',') WITHIN GROUP (ORDER BY USER_ID )  
from (
SELECT DISTINCT LD.USER_ID, LD.EMAIL_ID
FROM XXTWC_CLAIMS_APPR_GROUP_USERS GU, XXTWC_CLAIMS_USER_LOGIN_DETAILS LD, XXTWC_CLAIMS_USER_ORG_DETAILS OD
WHERE GU.USER_ID = LD.USER_ID
AND OD.USER_ID = LD.USER_ID 
AND LD.DEPT_CODE = '#'||lv_department|| q'#'
AND #'||LV_ORG_ID|| q'# = OD.ORG_ID 
AND EXISTS (SELECT result AS R FROM (select regexp_substr(OD.WAREHOUSE_CODE, '[^:]+', 1, level) result
			from DUAL
				connect by level <= length(regexp_replace(OD.WAREHOUSE_CODE, '[^:]+')) + 1)
                WHERE RESULT = '#'||LV_WAREHOUSE_CODE|| q'#')
AND GROUP_ID IN (
SELECT DISTINCT result 
FROM (
WITH RWS AS (
SELECT GROUP_ID 
				--INTO 
				--LV_GROUP_ID  
                FROM
	            (SELECT 
				GROUP_ID 
				FROM 
				XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID 
                AND ALH.APPR_LVL_HDR_ID = #'||LV_APPR_LVL_HDR_ID || q'#
                AND ((#'||lv_claim_amount || q'# <= ALD.MAX_VALUE        
				AND #'||lv_claim_amount || q'# >= (CASE WHEN ALD.ATTRIBUTE1 = 1 AND UPPER('#'||LV_DEPARTMENT|| q'#') IN ('OPERATIONS','QUALITY') THEN 0 ELSE ALD.MIN_VALUE END ))
				OR #'||lv_claim_amount || q'# > ALD.MAX_VALUE)  
				AND ALH.ORG_ID = #'||LV_ORG_ID || q'#
				AND NOT EXISTS (SELECT 1 FROM XXTWC_CLAIMS_APPR_WF_ACT_LOG LO
				WHERE LO.SEQ = #'||LV_SEQ || q'# AND LO.GROUP_ID = ALD.GROUP_ID AND LO.WF_ID = #'||LV_WF_ID || q'# AND LO.CLAIM_ID = #'||P_CLAIM_ID || q'#)
				AND ALD.GROUP_ID  IS NOT NULL
				ORDER BY ALD.MAX_VALUE ASC)
				WHERE ROWNUM < 2
)


select regexp_substr(GROUP_ID, '[^:]+', 1, level) result
			from RWS
				connect by level <= length(regexp_replace(GROUP_ID, '[^:]+')) + 1)))#';
				EXECUTE IMMEDIATE lv_query into LV_TO_EMAIL;				
	--dbms_output.put_line(LV_TO_EMAIL);			
EXCEPTION
WHEN OTHERS THEN
LV_TO_EMAIL := NULL;
XXTWC_CLAIMS_GP_ERROR_PKG.GP_ERROR_LOG ('Error in Dynamic sql of Claim Owner Approve/Reject Email',
                             SQLCODE,   
							 SQLERRM, 
							 V('APP_USER'),
                             35,
							 p_claim_id
                             );
END;

BEGIN
        SELECT
        FIRSTNAME || ' ' || LASTNAME  NAME,
        EMAIL_ID  
        INTO 
        LV_NAME,
        LV_EMAIL
        FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L
        WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
        AND L.CLAIM_ID = LV_CLAIM_ID AND "ACTION" = 'Review Claim and Submit'
        AND L.STATUS <> 0;
    EXCEPTION
        WHEN OTHERS THEN
        LV_NAME := NULL;
        LV_EMAIL := NULL;
END;

BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER_APP,
LV_EMAIL_BODY_APP,
LV_EMAIL_CC_APP
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'CLAIM_FOR_DEPARTMENT_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY_APP := NULL;
		LV_EMAIL_CC_APP := NULL; 
END;

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '\',NULL); 
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#NAME#',LV_NAME);
--LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY_APP := REPLACE(LV_EMAIL_BODY_APP, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER_APP := REPLACE(LV_EMAIL_HEADER_APP, LV_EMAIL_HEADER_APP, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER_APP);

IF  LV_TO_EMAIL IS NOT NULL AND LV_EMAIL_BODY_APP IS NOT NULL
THEN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
		p_cc                 => LV_EMAIL_CC_APP,
        p_body               => LV_EMAIL_BODY_APP,
		p_body_html          => LV_EMAIL_BODY_APP,
        p_subj               => LV_EMAIL_HEADER_APP
         );
        APEX_MAIL.PUSH_QUEUE;
    END IF;
	ELSE
	
	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID IN
	(SELECT GROUP_ID
				FROM XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID
				AND ALH.HIERARCHY_NAME = 'Finance'
				AND lv_claim_amount BETWEEN ALD.MIN_VALUE AND ALD.MAX_VALUE
				AND ALH.ORG_ID = LV_ORG_ID
				AND ALD.GROUP_ID  IS NOT NULL);
	BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_FINANCE_APPROVAL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END; 

BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
END;

LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL); 
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_CLAIM_TYPES);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

IF LV_EMAIL_BODY IS NOT NULL AND LV_TO_EMAIL IS NOT NULL
THEN
l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
		p_cc                 => LV_EMAIL_CC,
        p_body               => LV_EMAIL_BODY,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
         );
        APEX_MAIL.PUSH_QUEUE;

END IF;
	END IF;
	END;
END SEND_EMAIL_FOR_CLAIM_OWNER_APPROVAL;
-------------------------------------------------------------------------------------------
/*PROCEDURE FOR EMAIL NOTIFICATION WHEN CLAIM A- IS SUBMIT*/
PROCEDURE SEND_EMAIL_FOR_SUBMIT_A_MINUS(
	P_CLAIM_TYPES 		VARCHAR2,
	P_CLAIM_ID          NUMBER
)IS

 l_id NUMBER;
    lv_to_email VARCHAR2(5000) ;
    lv_email VARCHAR2(500);
    lv_created_by VARCHAR2(500);
    lv_name VARCHAR2(500);
    lv_query VARCHAR2(4000);
    lv_claim_amount NUMBER;
    lv_wf_id NUMBER;
    lv_seq NUMBER;
    lv_claim_id NUMBER;
    lv_claim_date DATE;
    lv_claim_number VARCHAR2(1000);
    lv_org_id NUMBER;
    lv_appr_lvl_hdr_id NUMBER;
    LV_DIRECT_FLAG NUMBER;
	LV_EMAIL_HEADER VARCHAR2(1000);
	LV_EMAIL_BODY CLOB;
	lv_wf_next_seq_no NUMBER;
	lv_department VARCHAR2(200);
	lv_salesmanager VARCHAR2(500);
    LV_SALESMANAGER_ID NUMBER;
    LV_LOOKUP_VALUE VARCHAR2(500);
	LV_LOGIN_URL    VARCHAR2(1000);
	LV_TO_EMAIL_DEPT VARCHAR2(5000);
	LV_TO_EMAIL_FINANCE VARCHAR2(5000);
	LV_TO_EMAIL_SALE   VARCHAR2(5000);
    LV_WAREHOUSE_CODE VARCHAR2(5000);
	LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
	LV_ORDER_NUMBER  VARCHAR2(1000);
	LV_EMAIL_CC    VARCHAR2(4000);
	
	BEGIN
   SELECT 
    ch.claim_number,
    ch.claim_id,
    wh.appr_lvl_hdr_id,
    ch.org_id,
    ch.wf_id,
    ch.claim_amount,
    ch.claim_date,
	ch.wf_next_seq_no,
	ch.department,
    ch.salesmanager,
    ch.WAREHOUSE_CODE,
	ch.SOLD_TO_CUSTOMER_NAME,
	ch.ORDER_NUMBER
INTO
    lv_claim_number,
    lv_claim_id,
    lv_appr_lvl_hdr_id,
    lv_org_id,
    lv_wf_id,
    lv_claim_amount,
    lv_claim_date,
	lv_wf_next_seq_no,
	lv_department,
	lv_salesmanager,
    LV_WAREHOUSE_CODE,
	LV_SOLD_TO_CUSTOMER_NAME,
	LV_ORDER_NUMBER
	
FROM
    xxtwc_claims_headers        ch,
    xxtwc_claims_appr_wf_header wh
WHERE
        ch.wf_id = wh.wf_id
    AND claim_id = P_CLAIM_ID;
    
    SELECT SEQ 
   INTO LV_SEQ 
   FROM XXTWC_CLAIMS_APPR_WF_DETAILS WF, XXTWC_CLAIMS_APPR_WF_HEADER WH
	WHERE WF.WF_ID = WH.WF_ID
	AND WF.WF_ID = LV_WF_ID
	AND UPPER(STEP_NAME) = UPPER('Departmental Hierarchy Approval');
	
	BEGIN
IF lv_wf_next_seq_no = 11
	THEN
	BEGIN
    SELECT USER_ID
    INTO LV_SALESMANAGER_ID
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS
    WHERE UPPER(EMAIL_ID) = UPPER(lv_salesmanager);
    EXCEPTION
    WHEN OTHERS
    THEN LV_SALESMANAGER_ID := NULL;
    END;
    
	IF LV_SALESMANAGER_ID IS NOT NULL
	THEN LV_TO_EMAIL_SALE := lv_salesmanager;
	ELSE
	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL_SALE
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU, XXTWC_CLAIMS_APPR_GROUPS G
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID = G.GROUP_ID
    AND G.GROUP_NAME = 'Claim Owner';
	END IF;
	

	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL_FINANCE
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID IN
	(SELECT GROUP_ID
				FROM XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID
				AND ALH.HIERARCHY_NAME = 'Finance'
				AND lv_claim_amount BETWEEN ALD.MIN_VALUE AND ALD.MAX_VALUE
				AND ALH.ORG_ID = LV_ORG_ID
				AND ALD.GROUP_ID  IS NOT NULL);
	
	
	
	
	BEGIN
	lv_query:=q'#SELECT LISTAGG (EMAIL_ID, ',') WITHIN GROUP (ORDER BY USER_ID )  
from (
SELECT DISTINCT LD.USER_ID, LD.EMAIL_ID
FROM XXTWC_CLAIMS_APPR_GROUP_USERS GU, XXTWC_CLAIMS_USER_LOGIN_DETAILS LD, XXTWC_CLAIMS_USER_ORG_DETAILS OD
WHERE GU.USER_ID = LD.USER_ID 
AND OD.USER_ID = LD.USER_ID
AND LD.DEPT_CODE IN (SELECT CH.DEPARTMENT FROM XXTWC_CLAIMS_HEADERS CH WHERE CH.CLAIM_ID = #'||LV_CLAIM_ID|| q'#)
AND #'||LV_ORG_ID|| q'# = OD.ORG_ID 
AND EXISTS (SELECT result AS R FROM (select regexp_substr(OD.WAREHOUSE_CODE, '[^:]+', 1, level) result
			from DUAL
				connect by level <= length(regexp_replace(OD.WAREHOUSE_CODE, '[^:]+')) + 1)
                WHERE RESULT = '#'||LV_WAREHOUSE_CODE|| q'#')
AND GROUP_ID IN (
SELECT DISTINCT result 
FROM (
WITH RWS AS (
SELECT GROUP_ID 
				--INTO 
				--LV_GROUP_ID  
                FROM
	            (SELECT 
				GROUP_ID 
				FROM 
				XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID 
                AND ALH.APPR_LVL_HDR_ID = #'||LV_APPR_LVL_HDR_ID || q'#
                AND ((#'||lv_claim_amount || q'# <= ALD.MAX_VALUE        
				AND #'||lv_claim_amount || q'# >= (CASE WHEN ALD.ATTRIBUTE1 = 1 AND UPPER('#'||LV_DEPARTMENT|| q'#') IN ('OPERATIONS','QUALITY') THEN 0 ELSE ALD.MIN_VALUE END ))
				OR #'||lv_claim_amount || q'# > ALD.MAX_VALUE)  
				AND ALH.ORG_ID = #'||LV_ORG_ID || q'#
				AND NOT EXISTS (SELECT 1 FROM XXTWC_CLAIMS_APPR_WF_ACT_LOG LO
				WHERE LO.SEQ = #'||LV_SEQ || q'# AND LO.GROUP_ID = ALD.GROUP_ID AND LO.WF_ID = #'||LV_WF_ID || q'# AND LO.CLAIM_ID = #'||LV_CLAIM_ID || q'#)
				AND ALD.GROUP_ID  IS NOT NULL
				ORDER BY ALD.MAX_VALUE ASC)
				--WHERE ROWNUM < 2
)


select regexp_substr(GROUP_ID, '[^:]+', 1, level) result
			from RWS
				connect by level <= length(regexp_replace(GROUP_ID, '[^:]+')) + 1)))#';
 
   EXECUTE IMMEDIATE lv_query into LV_TO_EMAIL_DEPT;				
	--dbms_output.put_line(LV_TO_EMAIL);	
EXCEPTION
  WHEN OTHERS THEN
  LV_TO_EMAIL_DEPT := NULL;
 END;
	
	
BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_A-CUSTOMER_CONCERN';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END;
    
	ELSE
	
	SELECT LISTAGG( EMAIL_ID, ', ') WITHIN GROUP (ORDER BY EMAIL_ID) "EMAIL_ID"
	INTO LV_TO_EMAIL_FINANCE
    FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS LG, XXTWC_CLAIMS_APPR_GROUP_USERS GU
    WHERE LG.USER_ID = GU.USER_ID
    AND GU.GROUP_ID IN
	(SELECT GROUP_ID
				FROM XXTWC_CLAIMS_APPR_LVL_DTL ALD, XXTWC_CLAIMS_APPR_LVL_HDR ALH
	            WHERE ALD.APPR_LVL_HDR_ID = ALH.APPR_LVL_HDR_ID
				AND ALH.HIERARCHY_NAME = 'Finance'
				AND lv_claim_amount BETWEEN ALD.MIN_VALUE AND ALD.MAX_VALUE
				AND ALH.ORG_ID = LV_ORG_ID
				AND ALD.GROUP_ID  IS NOT NULL);
BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'SUBMITTED_CLAIM_FOR_A-CUSTOMER_CONCERN';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL;
END;                
                
	END IF;
	END;

	

    BEGIN
        SELECT
        FIRSTNAME || ' ' || LASTNAME  NAME,
        EMAIL_ID  
        INTO 
        LV_NAME,
        LV_EMAIL
        FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS D , XXTWC_CLAIMS_APPR_WF_ACT_LOG L
        WHERE TO_CHAR(D.USER_ID) = L.ACTIONED_BY
        AND L.CLAIM_ID = LV_CLAIM_ID AND "ACTION" = 'Review Claim and Submit'
        AND L.STATUS <> 0;
    EXCEPTION
        WHEN OTHERS THEN
        LV_NAME := NULL;
        LV_EMAIL := NULL;
    END;
    
    BEGIN
    SELECT LOOKUP_VALUE 
    INTO LV_LOOKUP_VALUE
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'CLAIM_TYPE'
    AND STATUS = 1
    AND LOOKUP_NAME = P_CLAIM_TYPES;
    END;
	
	BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
	END;
    
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#ORIGINAL_ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_TYPE#',LV_LOOKUP_VALUE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_AMOUNT#',(to_char(LV_CLAIM_AMOUNT,'FML999G999G999G999G990D00')));
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#NAME#',LV_NAME);
--LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#EMAIL_ID#',LV_EMAIL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

 --lv_to_email := LV_TO_EMAIL_DEPT||','||LV_TO_EMAIL_FINANCE||','||LV_TO_EMAIL_SALE;
 lv_to_email := LV_TO_EMAIL_SALE||',' ||LV_TO_EMAIL_DEPT||',' ||LV_TO_EMAIL_FINANCE;
  

 IF LV_EMAIL_BODY IS NOT NULL AND LV_TO_EMAIL IS NOT NULL
 THEN
    BEGIN
    l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => lv_to_email,
		p_cc                 => LV_EMAIL_CC,
        p_body               => LV_EMAIL_BODY,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
        );
        APEX_MAIL.PUSH_QUEUE;
END;
END IF;
END SEND_EMAIL_FOR_SUBMIT_A_MINUS;

----------------------------------------------------------------------------------
/*PROCEDURE FOR EMAIL FORGOT PASSWORD*/

PROCEDURE SEND_EMAIL_FOR_FORGOT_PASSWORD (
	P_EMAIL_ID VARCHAR2
)IS
LV_EMAIL VARCHAR2(500);
LV_USER_NAME VARCHAR2(500);
LV_PWD VARCHAR2 (100);
LV_EMAIL_HEADER VARCHAR2(4000);
LV_EMAIL_BODY VARCHAR2(4000);
LV_LOGIN_URL VARCHAR2(1000);
LV_GET_PWD VARCHAR2(1000);
BEGIN
	BEGIN
		SELECT FIRSTNAME INTO LV_USER_NAME 
		FROM XXTWC_CLAIMS_USER_LOGIN_DETAILS 
		WHERE UPPER(EMAIL_ID) = UPPER(P_EMAIL_ID);
		EXCEPTION WHEN OTHERS THEN
		LV_USER_NAME := NULL;
	END;
	SELECT dbms_random.string('P', 6)  INTO LV_PWD FROM dual;
    select xxtwc_claims_user_registration_pkg.get_hash (p_username   => upper(P_EMAIL_ID),
                                      P_PASSWORD   => LV_PWD) into LV_GET_PWD from dual;
	--:P41_PASSWORD := LV_PWD;
	UPDATE XXTWC_CLAIMS_USER_LOGIN_DETAILS 
	SET PASSWORD =  LV_GET_PWD,
        is_password_change = 'Y'
	WHERE UPPER(EMAIL_ID) = UPPER(P_EMAIL_ID);

BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'PASSWORD_CHANGED_EMAIL';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
END;            


BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL_LOGIN';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/login';
	END;


LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL);

LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#FIRSTNAME#',LV_USER_NAME);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#PASSWORD#',LV_PWD);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

BEGIN
 apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => P_EMAIL_ID,
        p_body               => LV_EMAIL_BODY,
        p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER );
		
		APEX_MAIL.PUSH_QUEUE;
END;
--END IF;
END SEND_EMAIL_FOR_FORGOT_PASSWORD;

--------------------------------

PROCEDURE SEND_EMAIL_FOR_DRAFT_CLAIM (
	P_CLAIM_ID          NUMBER
)IS

    l_id NUMBER;
    lv_to_email VARCHAR2(5000);
    lv_seq NUMBER;
    lv_claim_date DATE;
    lv_claim_number VARCHAR2(1000);
	LV_EMAIL_HEADER VARCHAR2(1000);
	LV_EMAIL_BODY CLOB;
	lv_department VARCHAR2(200);
	LV_LOGIN_URL    VARCHAR2(1000);
	LV_SOLD_TO_CUSTOMER_NAME VARCHAR2(1000);
	LV_ORDER_NUMBER  VARCHAR2(1000);
	LV_EMAIL_CC VARCHAR2(4000);
	LV_SHIP_TO_SITE VARCHAR2(100);
	LV_WAREHOUSE_CODE VARCHAR2(240);
	LV_CLAIM_REASON_CODE VARCHAR2(100);
	LV_SHIP_DATE DATE;
	LV_TABLE_DATA VARCHAR2(2000) := '<tr>
<td  style="border : 1px solid; text-align: center;"> #CLAIM_NUMBER# </td>
<td  style="border : 1px solid; text-align: center;"> #ORDER_NUMBER#</td>
<td  style="border : 1px solid; text-align: center;"> #CUSTOMER#</td>
<td  style="border : 1px solid; text-align: center;"> #SHIP_TO_SITE# </td>
<td  style="border : 1px solid; text-align: center;"> #SHIP_DATE# </td>
<td  style="border : 1px solid; text-align: center;"> #WAREHOUSE_CODE# </td>
<td  style="border : 1px solid; text-align: center;"> #CLAIM_DATE# </td>
<td  style="border : 1px solid; text-align: center;"> #CLAIM_REASON_CODE# </td>
</tr>';
LV_REPLACED_DATA VARCHAR2(10000);

	
BEGIN
SELECT
    claim_number,
    claim_date,
	SOLD_TO_CUSTOMER_NAME,
	ORDER_NUMBER,
	SHIP_TO_SITE,
	WAREHOUSE_CODE
	
INTO
    lv_claim_number,
    lv_claim_date,
	LV_SOLD_TO_CUSTOMER_NAME,
	LV_ORDER_NUMBER,
	LV_SHIP_TO_SITE,
	LV_WAREHOUSE_CODE
	
FROM
    xxtwc_claims_headers   
WHERE claim_id = P_CLAIM_ID;
	
	
    FOR I IN (SELECT (SELECT 
	   DISTINCT meaning 
    FROM fusion.FND_LOOKUP_VALUES 
  WHERE LOOKUP_TYPE ='DOO_RETURN_REASON'
  AND LANGUAGE ='US'
  AND tag IN ('CARRIER','OPERATIONS','QUALITY','SALES')
  and ENABLED_FLAG ='Y'
  and lookup_code = CLAIM_REASON_CODE )CLAIM_REASON_CODE,
    SHIP_DATE
	FROM 
	XXTWC_CLAIMS_LINES WHERE claim_id = P_CLAIM_ID)
	LOOP
	LV_REPLACED_DATA := LV_REPLACED_DATA || LV_TABLE_DATA;
	LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#CLAIM_REASON_CODE#',I.CLAIM_REASON_CODE);
	LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#SHIP_DATE#',I.SHIP_DATE);
	END LOOP;
	
	
BEGIN
SELECT 
EMAIL_HEADER,
EMAIL_BODY,
EMAIL_CC
INTO
LV_EMAIL_HEADER,
LV_EMAIL_BODY,
LV_EMAIL_CC
FROM 
XXTWC_CLAIMS_EMAIL_TEMPLATES
WHERE TEMP_CODE = 'CLAIM_IN_DRAFT';
EXCEPTION
        WHEN OTHERS THEN
        LV_EMAIL_HEADER := NULL; 
		LV_EMAIL_BODY := NULL; 
		LV_EMAIL_CC := NULL; 
END;
    
	
    
    BEGIN
    SELECT LOOKUP_VALUE 
    INTO LV_TO_EMAIL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'DISTRIBUTION_GROUP' 
    AND STATUS = 1
    AND LOOKUP_NAME = LV_WAREHOUSE_CODE; 
	EXCEPTION
        WHEN OTHERS THEN
        LV_TO_EMAIL := NULL; 
    END;
	
	BEGIN
	SELECT LOOKUP_VALUE 
    INTO LV_LOGIN_URL
    from XXTWC_CLAIMS_LOOKUPS 
    where LOOKUP_TYPE = 'LOGIN_URL'
    AND STATUS = 1
    AND LOOKUP_NAME = 'URL';
	EXCEPTION
        WHEN OTHERS THEN
		LV_LOGIN_URL := '#APEX_URL#twc/r/claim-management225/claim-approval';
	END;
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '\',NULL);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#ORDER_NUMBER#',LV_ORDER_NUMBER);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#CUSTOMER#',LV_SOLD_TO_CUSTOMER_NAME);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#SHIP_TO_SITE#', LV_SHIP_TO_SITE);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#WAREHOUSE_CODE#', LV_WAREHOUSE_CODE);
LV_REPLACED_DATA := REPLACE(LV_REPLACED_DATA, '#CLAIM_DATE#',LV_CLAIM_DATE);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#TABLE_DATA#',LV_REPLACED_DATA);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#CLAIM_NUMBER#',LV_CLAIM_NUMBER);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#LOGIN_URL#',LV_LOGIN_URL);
LV_EMAIL_BODY := REPLACE(LV_EMAIL_BODY, '#APEX_URL#',V('P0_INSTANCE_URL'));
LV_EMAIL_HEADER := REPLACE(LV_EMAIL_HEADER, LV_EMAIL_HEADER, '****'|| V('G_ENVIRONMENT')||'**** '||LV_EMAIL_HEADER);

 IF LV_EMAIL_BODY IS NOT NULL AND LV_TO_EMAIL IS NOT NULL
 THEN
    BEGIN
    l_id := apex_mail.send (
        P_from               => V('P0_FROM_EMAIL'),
        p_to                 => LV_TO_EMAIL,
        p_body               => LV_EMAIL_BODY,
		p_cc                 => LV_EMAIL_CC,
		p_body_html          => LV_EMAIL_BODY,
        p_subj               => LV_EMAIL_HEADER
        );
        APEX_MAIL.PUSH_QUEUE;
END;
END IF;
END SEND_EMAIL_FOR_DRAFT_CLAIM;

END XXTWC_CLAIMS_EMAIL_NOTFICATION_PKG;